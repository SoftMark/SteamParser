  
IEconItems_1046930
------------------
  GET GetPlayerItems (v0001)
    
    Parameters:
      steamid                   uint64   required
        - The Steam ID to fetch items for
  
IEconItems_1269260
------------------
  GET GetEquippedPlayerItems (v0001)
    
    Parameters:
      class_id                  uint32   required
        - Return items equipped for this class id
      steamid                   uint64   required
        - The Steam ID to fetch items for
  
IEconItems_205790
-----------------
  GET GetEquippedPlayerItems (v0001)
    
    Parameters:
      class_id                  uint32   required
        - Return items equipped for this class id
      steamid                   uint64   required
        - The Steam ID to fetch items for
  
  GET GetPlayerItems (v0001)
    
    Parameters:
      steamid                   uint64   required
        - The Steam ID to fetch items for
  
  GET GetSchemaURL (v0001)
  
  GET GetStoreMetaData (v0001)
    
    Parameters:
      language                  string   optional
        - The language to results in.
  
IEconItems_221540
-----------------
  GET GetPlayerItems (v0001)
    
    Parameters:
      steamid                   uint64   required
        - The Steam ID to fetch items for
  
IEconItems_238460
-----------------
  GET GetPlayerItems (v0001)
    
    Parameters:
      steamid                   uint64   required
        - The Steam ID to fetch items for
  
IEconItems_440
--------------
  GET GetPlayerItems (v0001)
    
    Parameters:
      steamid                   uint64   required
        - The Steam ID to fetch items for
  
  GET GetSchema (v0001)
    
    Parameters:
      language                  string   optional
        - The language to return the names in. Defaults to returning string keys.
  
  GET GetSchemaItems (v0001)
    
    Parameters:
      language                  string   optional
        - The language to return the names in. Defaults to returning string keys.
      start                     int32    optional
        - The first item id to return. Defaults to 0. Response will indicate next value to query if applicable.
  
  GET GetSchemaOverview (v0001)
    
    Parameters:
      language                  string   optional
        - The language to return the names in. Defaults to returning string keys.
  
  GET GetSchemaURL (v0001)
  
  GET GetStoreMetaData (v0001)
    
    Parameters:
      language                  string   optional
        - The language to results in.
  
  GET GetStoreStatus (v0001)
  
IEconItems_570
--------------
  GET GetEquippedPlayerItems (v0001)
    
    Parameters:
      class_id                  uint32   required
        - Return items equipped for this class id
      steamid                   uint64   required
        - The Steam ID to fetch items for
  
  GET GetPlayerItems (v0001)
    
    Parameters:
      steamid                   uint64   required
        - The Steam ID to fetch items for
  
  GET GetSchemaURL (v0001)
  
  GET GetStoreMetaData (v0001)
    
    Parameters:
      language                  string   optional
        - The language to results in.
  
IEconItems_583950
-----------------
  GET GetEquippedPlayerItems (v0001)
    
    Parameters:
      class_id                  uint32   required
        - Return items equipped for this class id
      steamid                   uint64   required
        - The Steam ID to fetch items for
  
IEconItems_620
--------------
  GET GetPlayerItems (v0001)
    
    Parameters:
      steamid                   uint64   required
        - The Steam ID to fetch items for
  
  GET GetSchema (v0001)
    
    Parameters:
      language                  string   optional
        - The language to return the names in. Defaults to returning string keys.
  
IEconItems_730
--------------
  GET GetPlayerItems (v0001)
    
    Parameters:
      steamid                   uint64   required
        - The Steam ID to fetch items for
  
  GET GetSchema (v0002)
    
    Parameters:
      language                  string   optional
        - The language to return the names in. Defaults to returning string keys.
  
  GET GetSchemaURL (v0002)
  
  GET GetStoreMetaData (v0001)
    
    Parameters:
      language                  string   optional
        - The language to results in.
  
IGCVersion_1046930
------------------
  GET GetClientVersion (v0001)
  
  GET GetServerVersion (v0001)
  
IGCVersion_1269260
------------------
  GET GetClientVersion (v0001)
  
  GET GetServerVersion (v0001)
  
IGCVersion_205790
-----------------
  GET GetClientVersion (v0001)
  
  GET GetServerVersion (v0001)
  
IGCVersion_440
--------------
  GET GetClientVersion (v0001)
  
  GET GetServerVersion (v0001)
  
IGCVersion_570
--------------
  GET GetClientVersion (v0001)
  
  GET GetServerVersion (v0001)
  
IGCVersion_583950
-----------------
  GET GetClientVersion (v0001)
  
  GET GetServerVersion (v0001)
  
IGCVersion_730
--------------
  GET GetServerVersion (v0001)
  
IPortal2Leaderboards_620
------------------------
  GET GetBucketizedData (v0001)
    
    Parameters:
      leaderboardName           string   required
        - The leaderboard name to fetch data for.
  
ISteamApps
----------
  GET GetAppList (v0001)
  
  GET GetAppList (v0002)
  
  GET GetSDRConfig (v0001)
    
    Parameters:
      appid                     uint32   required
        - AppID of game
  
  GET GetServersAtAddress (v0001)
    
    Parameters:
      addr                      string   required
        - IP or IP:queryport to list
  
  GET UpToDateCheck (v0001)
    
    Parameters:
      appid                     uint32   required
        - AppID of game
      version                   uint32   required
        - The installed version of the game
  
ISteamBroadcast
---------------
  GET ViewerHeartbeat (v0001)
    
    Parameters:
      sessionid                 uint64   required
        - Broadcast Session ID
      steamid                   uint64   required
        - Steam ID of the broadcaster
      stream                    int32    optional
        - video stream representation watching
      token                     uint64   required
        - Viewer token
  
ISteamCDN
---------
  POST SetClientFilters (v0001)
    
    Parameters:
      allowedasns               string   optional
        - comma-separated list of allowed client network AS numbers - blank for not used
      allowedipblocks           string   optional
        - comma-separated list of allowed IP address blocks in CIDR format - blank for not used
      allowedipcountries        string   optional
        - comma-separated list of allowed client IP country codes in ISO 3166-1 format - blank for not used
      cdnname                   string   required
        - Steam name of CDN property
      key                       string   required
        - access key
  
  POST SetPerformanceStats (v0001)
    
    Parameters:
      cache_hit_percent         uint32   optional
        - Percent cache hits
      cdnname                   string   required
        - Steam name of CDN property
      cpu_percent               uint32   optional
        - Percent CPU load
      key                       string   required
        - access key
      mbps_recv                 uint32   optional
        - Incoming network traffic in Mbps
      mbps_sent                 uint32   optional
        - Outgoing network traffic in Mbps
  
ISteamDirectory
---------------
  GET GetCMList (v0001)
    
    Parameters:
      cellid                    uint32   required
        - Client's Steam cell ID
      maxcount                  uint32   optional
        - Max number of servers to return
  
  GET GetCSList (v0001)
    
    Parameters:
      cellid                    uint32   required
        - Client's Steam cell ID
      maxcount                  uint32   optional
        - Max number of servers to return
  
  GET GetSteamPipeDomains (v0001)
  
ISteamEconomy
-------------
  GET GetAssetClassInfo (v0001)
    
    Parameters:
      appid                     uint32   required
        - Must be a steam economy app.
      class_count               uint32   required
        - Number of classes requested. Must be at least one.
      classid0                  uint64   required
        - Class ID of the nth class.
      instanceid0               uint64   optional
        - Instance ID of the nth class.
      language                  string   optional
        - The user's local language
  
  GET GetAssetPrices (v0001)
    
    Parameters:
      appid                     uint32   required
        - Must be a steam economy app.
      currency                  string   optional
        - The currency to filter for
      language                  string   optional
        - The user's local language
  
ISteamNews
----------
  GET GetNewsForApp (v0001)
    
    Parameters:
      appid                     uint32   required
        - AppID to retrieve news for
      count                     uint32   optional
        - # of posts to retrieve (default 20)
      enddate                   uint32   optional
        - Retrieve posts earlier than this date (unix epoch timestamp)
      maxlength                 uint32   optional
        - Maximum length for the content to return, if this is 0 the full content is returned, if it's less then a blurb is generated to fit.
      tags                      string   optional
        - Comma-separated list of tags to filter by (e.g. 'patchnodes')
  
  GET GetNewsForApp (v0002)
    
    Parameters:
      appid                     uint32   required
        - AppID to retrieve news for
      count                     uint32   optional
        - # of posts to retrieve (default 20)
      enddate                   uint32   optional
        - Retrieve posts earlier than this date (unix epoch timestamp)
      feeds                     string   optional
        - Comma-separated list of feed names to return news for
      maxlength                 uint32   optional
        - Maximum length for the content to return, if this is 0 the full content is returned, if it's less then a blurb is generated to fit.
      tags                      string   optional
        - Comma-separated list of tags to filter by (e.g. 'patchnodes')
  
ISteamRemoteStorage
-------------------
  POST GetCollectionDetails (v0001)
    
    Parameters:
      collectioncount           uint32   required
        - Number of collections being requested
      publishedfileids          uint64[] required
        - collection ids to get the details for
  
  POST GetPublishedFileDetails (v0001)
    
    Parameters:
      itemcount                 uint32   required
        - Number of items being requested
      publishedfileids          uint64[] required
        - published file id to look up
  
  GET GetUGCFileDetails (v0001)
    
    Parameters:
      appid                     uint32   required
        - appID of product
      steamid                   uint64   optional
        - If specified, only returns details if the file is owned by the SteamID specified
      ugcid                     uint64   required
        - ID of UGC file to get info for
  
ISteamUser
----------
  GET GetFriendList (v0001)
    
    Parameters:
      key                       string   required
        - access key
      relationship              string   optional
        - relationship type (ex: friend)
      steamid                   uint64   required
        - SteamID of user
  
  GET GetPlayerBans (v0001)
    
    Parameters:
      key                       string   required
        - access key
      steamids                  string   required
        - Comma-delimited list of SteamIDs
  
  GET GetPlayerSummaries (v0001)
    
    Parameters:
      key                       string   required
        - access key
      steamids                  string   required
        - Comma-delimited list of SteamIDs
  
  GET GetPlayerSummaries (v0002)
    
    Parameters:
      key                       string   required
        - access key
      steamids                  string   required
        - Comma-delimited list of SteamIDs (max: 100)
  
  GET GetUserGroupList (v0001)
    
    Parameters:
      key                       string   required
        - access key
      steamid                   uint64   required
        - SteamID of user
  
  GET ResolveVanityURL (v0001)
    
    Parameters:
      key                       string   required
        - access key
      url_type                  int32    optional
        - The type of vanity URL. 1 (default): Individual profile, 2: Group, 3: Official game group
      vanityurl                 string   required
        - The vanity URL to get a SteamID for
  
ISteamUserAuth
--------------
  POST AuthenticateUser (v0001)
    
    Parameters:
      encrypted_loginkey        rawbinary required
        - Should be the users hashed loginkey, AES encrypted with the sessionkey.
      sessionkey                rawbinary required
        - Should be a 32 byte random blob of data, which is then encrypted with RSA using the Steam system's public key.  Randomness is important here for security.
      steamid                   uint64   required
        - Should be the users steamid, unencrypted.
  
  GET AuthenticateUserTicket (v0001)
    
    Parameters:
      appid                     uint32   required
        - appid of game
      key                       string   required
        - access key
      ticket                    string   required
        - Ticket from GetAuthSessionTicket.
  
ISteamUserOAuth
---------------
  GET GetTokenDetails (v0001)
    
    Parameters:
      access_token              string   required
        - OAuth2 token for which to return details
  
ISteamUserStats
---------------
  GET GetGlobalAchievementPercentagesForApp (v0001)
    
    Parameters:
      gameid                    uint64   required
        - GameID to retrieve the achievement percentages for
  
  GET GetGlobalAchievementPercentagesForApp (v0002)
    
    Parameters:
      gameid                    uint64   required
        - GameID to retrieve the achievement percentages for
  
  GET GetGlobalStatsForGame (v0001)
    
    Parameters:
      appid                     uint32   required
        - AppID that we're getting global stats for
      count                     uint32   required
        - Number of stats get data for
      enddate                   uint32   optional
        - End date for daily totals (unix epoch timestamp)
      name                      string[] required
        - Names of stat to get data for
      startdate                 uint32   optional
        - Start date for daily totals (unix epoch timestamp)
  
  GET GetNumberOfCurrentPlayers (v0001)
    
    Parameters:
      appid                     uint32   required
        - AppID that we're getting user count for
  
  GET GetPlayerAchievements (v0001)
    
    Parameters:
      appid                     uint32   required
        - AppID to get achievements for
      key                       string   required
        - access key
      l                         string   optional
        - Language to return strings for
      steamid                   uint64   required
        - SteamID of user
  
  GET GetSchemaForGame (v0001)
    
    Parameters:
      appid                     uint32   required
        - appid of game
      key                       string   required
        - access key
      l                         string   optional
        - localized langauge to return (english, french, etc.)
  
  GET GetSchemaForGame (v0002)
    
    Parameters:
      appid                     uint32   required
        - appid of game
      key                       string   required
        - access key
      l                         string   optional
        - localized language to return (english, french, etc.)
  
  GET GetUserStatsForGame (v0001)
    
    Parameters:
      appid                     uint32   required
        - appid of game
      key                       string   required
        - access key
      steamid                   uint64   required
        - SteamID of user
  
  GET GetUserStatsForGame (v0002)
    
    Parameters:
      appid                     uint32   required
        - appid of game
      key                       string   required
        - access key
      steamid                   uint64   required
        - SteamID of user
  
ISteamWebAPIUtil
----------------
  GET GetServerInfo (v0001)
  
  GET GetSupportedAPIList (v0001)
    
    Parameters:
      key                       string   optional
        - access key
  
ISteamWebUserPresenceOAuth
--------------------------
  POST PollStatus (v0001)
    
    Parameters:
      message                   uint32   required
        - Message that was last known to the user
      pollid                    uint32   optional
        - Caller-specific poll id
      secidletime               uint32   optional
        - How many seconds is client considering itself idle, e.g. screen is off
      sectimeout                uint32   optional
        - Long-poll timeout in seconds
      steamid                   string   required
        - Steam ID of the user
      umqid                     uint64   required
        - UMQ Session ID
      use_accountids            uint32   optional
        - Boolean, 0 (default): return steamid_from in output, 1: return accountid_from
  
ITFItems_440
------------
  GET GetGoldenWrenches (v0001)
  
  GET GetGoldenWrenches (v0002)
  
ITFPromos_205790
----------------
  GET GetItemID (v0001)
    
    Parameters:
      promoid                   uint32   required
        - The promo ID to grant an item for
      steamid                   uint64   required
        - The Steam ID to fetch items for
  
  POST GrantItem (v0001)
    
    Parameters:
      promoid                   uint32   required
        - The promo ID to grant an item for
      steamid                   uint64   required
        - The Steam ID to fetch items for
  
ITFPromos_440
-------------
  GET GetItemID (v0001)
    
    Parameters:
      promoid                   uint32   required
        - The promo ID to grant an item for
      steamid                   uint64   required
        - The Steam ID to fetch items for
  
  POST GrantItem (v0001)
    
    Parameters:
      promoid                   uint32   required
        - The promo ID to grant an item for
      steamid                   uint64   required
        - The Steam ID to fetch items for
  
ITFPromos_570
-------------
  GET GetItemID (v0001)
    
    Parameters:
      promoid                   uint32   required
        - The promo ID to grant an item for
      steamid                   uint64   required
        - The Steam ID to fetch items for
  
  POST GrantItem (v0001)
    
    Parameters:
      promoid                   uint32   required
        - The promo ID to grant an item for
      steamid                   uint64   required
        - The Steam ID to fetch items for
  
ITFPromos_620
-------------
  GET GetItemID (v0001)
    
    Parameters:
      PromoID                   uint32   required
        - The promo ID to grant an item for
      steamid                   uint64   required
        - The Steam ID to fetch items for
  
  POST GrantItem (v0001)
    
    Parameters:
      PromoID                   uint32   required
        - The promo ID to grant an item for
      steamid                   uint64   required
        - The Steam ID to fetch items for
  
ITFSystem_440
-------------
  GET GetWorldStatus (v0001)
  
IGameServersService
-------------------
  GET GetAccountList (v0001)
  
    Gets a list of game server accounts with their logon tokens
    
    Parameters:
      key                       string   required
        - Access key
  
  POST CreateAccount (v0001)
  
    Creates a persistent game server account
    
    Parameters:
      appid                     uint32   required
        - The app to use the account for
      key                       string   required
        - Access key
      memo                      string   required
        - The memo to set on the new account
  
  POST SetMemo (v0001)
  
    This method changes the memo associated with the game server account. Memos do not affect the account in any way. The memo shows up in the GetAccountList response and serves only as a reminder of what the account is used for.
    
    Parameters:
      key                       string   required
        - Access key
      memo                      string   required
        - The memo to set on the new account
      steamid                   uint64   required
        - The SteamID of the game server to set the memo on
  
  POST ResetLoginToken (v0001)
  
    Generates a new login token for the specified game server
    
    Parameters:
      key                       string   required
        - Access key
      steamid                   uint64   required
        - The SteamID of the game server to reset the login token of
  
  POST DeleteAccount (v0001)
  
    Deletes a persistent game server account
    
    Parameters:
      key                       string   required
        - Access key
      steamid                   uint64   required
        - The SteamID of the game server account to delete
  
  GET GetAccountPublicInfo (v0001)
  
    Gets public information about a given game server account
    
    Parameters:
      key                       string   required
        - Access key
      steamid                   uint64   required
        - The SteamID of the game server to get info on
  
  GET QueryLoginToken (v0001)
  
    Queries the status of the specified token, which must be owned by you
    
    Parameters:
      key                       string   required
        - Access key
      login_token               string   required
        - Login token to query
  
  GET GetServerSteamIDsByIP (v0001)
  
    Gets a list of server SteamIDs given a list of IPs
    
    Parameters:
      key                       string   required
        - Access key
      server_ips                string   required
  
  GET GetServerIPsBySteamID (v0001)
  
    Gets a list of server IP addresses given a list of SteamIDs
    
    Parameters:
      key                       string   required
        - Access key
      server_steamids           uint64   required
  
IBroadcastService
-----------------
  POST PostGameDataFrameRTMP (v0001)
  
    Add a game meta data frame to broadcast from a client. Uses RTMP token for validation
    
    Parameters:
      appid                     uint32   required
        - AppID of the game being broadcasted
      frame_data                string   required
        - game data frame expressing current state of game (string, zipped, whatever)
      rtmp_token                string   required
        - Valid RTMP token for the Broadcaster
      steamid                   uint64   required
        - Broadcasters SteamID
  
IContentServerConfigService
---------------------------
  POST SetSteamCacheClientFilters (v0001)
  
    Update the client filters for a SteamCache node
    
    Parameters:
      allowed_ip_blocks         string   required
        - comma-separated list of allowed IP address blocks in CIDR format - blank to clear unfilter
      cache_id                  uint32   required
        - Unique ID number
      cache_key                 string   required
        - Valid current cache API key
      change_notes              string   required
        - Notes
      key                       string   required
        - Access key
  
  GET GetSteamCacheNodeParams (v0001)
  
    Get the operational parameters for a SteamCache node (information the node uses to operate).
    
    Parameters:
      cache_id                  uint32   required
        - Unique ID number
      cache_key                 string   required
        - Valid current cache API key
      key                       string   required
        - Access key
  
  POST SetSteamCachePerformanceStats (v0001)
  
    Update the performance/load stats for a SteamCache node
    
    Parameters:
      cache_hit_percent         uint32   required
        - Percent cache hits
      cache_id                  uint32   required
        - Unique ID number
      cache_key                 string   required
        - Valid current cache API key
      cpu_percent               uint32   required
        - Percent CPU load
      key                       string   required
        - Access key
      mbps_recv                 uint32   required
        - Incoming network traffic in Mbps
      mbps_sent                 uint32   required
        - Outgoing network traffic in Mbps
      num_connected_ips         uint32   required
        - Number of unique connected IP addresses
      upstream_egress_utilization uint32   required
        - What is the percent utilization of the busiest datacenter egress link?
  
IContentServerDirectoryService
------------------------------
  GET GetServersForSteamPipe (v0001)
    
    Parameters:
      cell_id                   uint32   required
        - client Cell ID
      ip_override               string   optional
        - client IP address
      ipv6_public               string   optional
        - client public ipv6 address if it knows it
      launcher_type             int32    optional
        - launcher type
      max_servers               uint32   optional
        - max servers in response list
  
  GET GetClientUpdateHosts (v0001)
    
    Parameters:
      cached_signature          string   required
  
  GET GetDepotPatchInfo (v0001)
    
    Parameters:
      appid                     uint32   required
      depotid                   uint32   required
      source_manifestid         uint64   required
      target_manifestid         uint64   required
  
IPublishedFileService
---------------------
  GET GetUserVoteSummary (v0001)
  
    Get user vote summary
    
    Parameters:
      publishedfileids          uint64   required
  
  GET QueryFiles (v0001)
  
    Performs a search query for published files
    
    Parameters:
      appid                     uint32   required
        - App that consumes the files
      cache_max_age_seconds     uint32   optional
        - Allow stale data to be returned for the specified number of seconds.
      child_publishedfileid     uint64   required
        - Find all items that reference the given item.
      creator_appid             uint32   required
        - App that created the files
      cursor                    string   required
        - Cursor to paginate through the results (set to '*' for the first request).  Prefer this over using the page parameter, as it will allow you to do deep pagination.  When used, the page parameter will be ignored.
      days                      uint32   required
        - If query_type is k_PublishedFileQueryType_RankedByTrend, then this is the number of days to get votes for [1,7].
      desired_revision          {enum}   optional
        - Return the data for the specified revision.
      excludedtags              string   required
        - (Optional) Tags that must NOT be present on a published file to satisfy the query.
      filetype                  uint32   required
        - EPublishedFileInfoMatchingFileType
      ids_only                  bool     required
        - (Optional) If true, only return the published file ids of files that satisfy this query.
      include_recent_votes_only bool     required
        - If query_type is k_PublishedFileQueryType_RankedByTrend, then limit result set just to items that have votes within the day range given
      key                       string   required
        - Access key
      language                  int32    optional
        - Language to search in and also what gets returned. Defaults to English.
      match_all_tags            bool     optional
        - If true, then items must have all the tags specified, otherwise they must have at least one of the tags.
      numperpage                uint32   optional
        - (Optional) The number of results, per page to return.
      omitted_flags             string   required
        - Flags that must not be set on any returned items
      page                      uint32   required
        - Current page
      query_type                uint32   required
        - enumeration EPublishedFileQueryType in clientenums.h
      required_flags            string   required
        - Required flags that must be set on any returned items
      required_kv_tags          {message} required
        - Required key-value tags to match on.
      requiredtags              string   required
        - Tags to match on. See match_all_tags parameter below
      return_children           bool     required
        - Return child item ids in the file details
      return_details            bool     required
        - By default, if none of the other 'return_*' fields are set, only some voting details are returned. Set this to true to return the default set of details.
      return_for_sale_data      bool     required
        - Return pricing information, if applicable
      return_kv_tags            bool     required
        - Return key-value tags in the file details
      return_metadata           bool     optional
        - Populate the metadata
      return_playtime_stats     uint32   required
        - Return playtime stats for the specified number of days before today.
      return_previews           bool     required
        - Return preview image and video details in the file details
      return_reactions          bool     optional
        - If true, then reactions to items will be returned.
      return_short_description  bool     required
        - Populate the short_description field instead of file_description
      return_tags               bool     required
        - Return tags in the file details
      return_vote_data          bool     required
        - Return vote data
      search_text               string   required
        - Text to match in the item's title or description
      strip_description_bbcode  bool     required
        - Strips BBCode from descriptions.
      taggroups                 {message} required
        - (Optional) At least one of the tags must be present on a published file to satisfy the query.
      totalonly                 bool     required
        - (Optional) If true, only return the total number of files that satisfy this query.
  
  GET GetDetails (v0001)
  
    Retrieves information about a set of published files.
    
    Parameters:
      appid                     uint32   required
      desired_revision          {enum}   optional
        - Return the data for the specified revision.
      includeadditionalpreviews bool     required
        - If true, return preview information in the returned details.
      includechildren           bool     required
        - If true, return children in the returned details.
      includeforsaledata        bool     required
        - If true, return pricing data, if applicable.
      includekvtags             bool     required
        - If true, return key value tags in the returned details.
      includemetadata           bool     required
        - If true, populate the metadata field.
      includereactions          bool     optional
        - If true, then reactions to items will be returned.
      includetags               bool     required
        - If true, return tag information in the returned details.
      includevotes              bool     required
        - If true, return vote data in the returned details.
      key                       string   required
        - Access key
      language                  int32    optional
        - Specifies the localized text to return. Defaults to English.
      publishedfileids          uint64   required
        - Set of published file Ids to retrieve details for.
      return_playtime_stats     uint32   required
        - Return playtime stats for the specified number of days before today.
      short_description         bool     required
        - If true, return a short description instead of the full description.
      strip_description_bbcode  bool     required
        - Strips BBCode from descriptions.
  
  GET GetUserFiles (v0001)
  
    Retrieves files published by a user.
    
    Parameters:
      appid                     uint32   required
        - App Id of the app that the files were published to.
      cache_max_age_seconds     uint32   optional
        - Allow stale data to be returned for the specified number of seconds.
      creator_appid             uint32   required
        - App Id of the app that published the files, only matched if specified.
      desired_revision          {enum}   optional
        - Return the data for the specified revision.
      excludedtags              string   required
        - (Optional) Tags that must NOT be present on a published file to satisfy the query.
      filetype                  uint32   required
        - (Optional) File type to match files to.
      ids_only                  bool     required
        - (Optional) If true, only return the published file ids of files that satisfy this query.
      key                       string   required
        - Access key
      language                  int32    optional
        - Specifies the localized text to return. Defaults to English.
      match_cloud_filename      string   required
        - Match this cloud filename if specified.
      numperpage                uint32   optional
        - (Optional) The number of results, per page to return.
      page                      uint32   optional
        - (Optional) Starting page for results.
      privacy                   uint32   required
        - (optional) Filter by privacy settings.
      required_kv_tags          {message} required
        - Required key-value tags to match on.
      requiredtags              string   required
        - (Optional) Tags that must be present on a published file to satisfy the query.
      return_children           bool     required
        - Return child item ids in the file details
      return_for_sale_data      bool     required
        - Return pricing information, if applicable
      return_kv_tags            bool     optional
        - Return key-value tags in the file details
      return_metadata           bool     optional
        - Populate the metadata field
      return_playtime_stats     uint32   required
        - Return playtime stats for the specified number of days before today.
      return_previews           bool     required
        - Return preview image and video details in the file details
      return_reactions          bool     optional
        - If true, then reactions to items will be returned.
      return_short_description  bool     optional
        - Populate the short_description field instead of file_description
      return_tags               bool     required
        - Return tags in the file details
      return_vote_data          bool     optional
        - Return vote data
      sortmethod                string   optional
        - (Optional) Sorting method to use on returned values.
      startindex_override       uint32   required
        - Backwards compatible for the client.
      steamid                   uint64   required
        - Steam ID of the user whose files are being requested.
      strip_description_bbcode  bool     required
        - Strips BBCode from descriptions.
      taggroups                 {message} required
        - (Optional) At least one of the tags must be present on a published file to satisfy the query.
      totalonly                 bool     required
        - (Optional) If true, only return the total number of files that satisfy this query.
      type                      string   optional
        - (Optional) Type of files to be returned.
  
IEconService
------------
  GET GetTradeHistory (v0001)
  
    Gets a history of trades
    
    Parameters:
      get_descriptions          bool     required
        - If set, the item display data for the items included in the returned trades will also be returned
      include_failed            bool     required
      include_total             bool     required
        - If set, the total number of trades the account has participated in will be included in the response
      key                       string   required
        - Access key
      language                  string   required
        - The language to use when loading item display data
      max_trades                uint32   required
        - The number of trades to return information for
      navigating_back           bool     required
        - The user wants the previous page of results, so return the previous max_trades trades before the start time and ID
      start_after_time          uint32   required
        - The time of the last trade shown on the previous page of results, or the time of the first trade if navigating back
      start_after_tradeid       uint64   required
        - The tradeid shown on the previous page of results, or the ID of the first trade if navigating back
  
  GET GetTradeStatus (v0001)
  
    Gets status for a specific trade
    
    Parameters:
      get_descriptions          bool     required
        - If set, the item display data for the items included in the returned trades will also be returned
      key                       string   required
        - Access key
      language                  string   required
        - The language to use when loading item display data
      tradeid                   uint64   required
  
  GET GetTradeOffers (v0001)
  
    Get a list of sent or received trade offers
    
    Parameters:
      active_only               bool     required
        - Indicates we should only return offers which are still active, or offers that have changed in state since the time_historical_cutoff
      cursor                    uint32   optional
        - Cursor aka start index
      get_descriptions          bool     required
        - If set, the item display data for the items included in the returned trade offers will also be returned. If one or more descriptions can't be retrieved, then your request will fail.
      get_received_offers       bool     required
        - Request the list of received offers.
      get_sent_offers           bool     required
        - Request the list of sent offers.
      historical_only           bool     required
        - Indicates we should only return offers which are not active.
      key                       string   required
        - Access key
      language                  string   required
        - The language to use when loading item display data.
      time_historical_cutoff    uint32   required
        - When active_only is set, offers updated since this time will also be returned
  
  GET GetTradeOffer (v0001)
  
    Gets a specific trade offer
    
    Parameters:
      get_descriptions          bool     required
        - If set, the item display data for the items included in the returned trade offers will also be returned. If one or more descriptions can't be retrieved, then your request will fail.
      key                       string   required
        - Access key
      language                  string   required
      tradeofferid              uint64   required
  
  GET GetTradeOffersSummary (v0001)
  
    Get counts of pending and new trade offers
    
    Parameters:
      key                       string   required
        - Access key
      time_last_visit           uint32   required
        - The time the user last visited.  If not passed, will use the time the user last visited the trade offer page.
  
  POST DeclineTradeOffer (v0001)
  
    Decline a trade offer someone sent to us
    
    Parameters:
      key                       string   required
        - Access key
      tradeofferid              uint64   required
  
  POST CancelTradeOffer (v0001)
  
    Cancel a trade offer we sent
    
    Parameters:
      key                       string   required
        - Access key
      tradeofferid              uint64   required
  
  GET GetTradeHoldDurations (v0001)
  
    Returns the estimated hold duration and end date that a trade with a user would have
    
    Parameters:
      key                       string   required
        - Access key
      steamid_target            uint64   required
        - User you are trading with
      trade_offer_access_token  string   required
        - A special token that allows for trade offers from non-friends.
  
IPlayerService
--------------
  POST RecordOfflinePlaytime (v0001)
  
    Tracks playtime for a user when they are offline
    
    Parameters:
      play_sessions             {message} required
      steamid                   uint64   required
      ticket                    string   required
  
  GET GetRecentlyPlayedGames (v0001)
  
    Gets information about a player's recently played games
    
    Parameters:
      count                     uint32   required
        - The number of games to return (0/unset: all)
      key                       string   required
        - Access key
      steamid                   uint64   required
        - The player we're asking about
  
  GET GetOwnedGames (v0001)
  
    Return a list of games owned by the player
    
    Parameters:
      appids_filter             uint32   required
        - if set, restricts result set to the passed in apps
      include_appinfo           bool     required
        - true if we want additional details (name, icon) about each game
      include_free_sub          bool     required
        - Some games are in the free sub, which are excluded by default.
      include_played_free_games bool     required
        - Free games are excluded by default.  If this is set, free games the user has played will be returned.
      key                       string   required
        - Access key
      skip_unvetted_apps        bool     optional
        - if set, skip unvetted store apps
      steamid                   uint64   required
        - The player we're asking about
  
  GET GetSteamLevel (v0001)
  
    Returns the Steam Level of a user
    
    Parameters:
      key                       string   required
        - Access key
      steamid                   uint64   required
        - The player we're asking about
  
  GET GetBadges (v0001)
  
    Gets badges that are owned by a specific user
    
    Parameters:
      key                       string   required
        - Access key
      steamid                   uint64   required
        - The player we're asking about
  
  GET GetCommunityBadgeProgress (v0001)
  
    Gets all the quests needed to get the specified badge, and which are completed
    
    Parameters:
      badgeid                   int32    required
        - The badge we're asking about
      key                       string   required
        - Access key
      steamid                   uint64   required
        - The player we're asking about
  
  GET IsPlayingSharedGame (v0001)
  
    Returns valid lender SteamID if game currently played is borrowed
    
    Parameters:
      appid_playing             uint32   required
        - The game player is currently playing
      key                       string   required
        - Access key
      steamid                   uint64   required
        - The player we're asking about
  
IGameNotificationsService
-------------------------
  POST UserCreateSession (v0001)
  
    Creates an async game session
    
    Parameters:
      appid                     uint32   required
        - The appid to create the session for.
      context                   uint64   required
        - Game-specified context value the game can used to associate the session with some object on their backend.
      steamid                   uint64   required
        - (Optional) steamid to make the request on behalf of -- if specified, the user must be in the session and all users being added to the session must be friends with the user.
      title                     {message} required
        - The title of the session to be displayed within each user's list of sessions.
      users                     {message} required
        - The initial state of all users in the session.
  
  POST UserUpdateSession (v0001)
  
    Updates an async game session
    
    Parameters:
      appid                     uint32   required
        - The appid of the session to update.
      sessionid                 uint64   required
        - The sessionid to update.
      steamid                   uint64   required
        - (Optional) steamid to make the request on behalf of -- if specified, the user must be in the session and all users being added to the session must be friends with the user.
      title                     {message} required
        - (Optional) The new title of the session.  If not specified, the title will not be changed.
      users                     {message} required
        - (Optional) A list of users whose state will be updated to reflect the given state. If the users are not already in the session, they will be added to it.
  
  POST UserDeleteSession (v0001)
  
    Deletes an async game session
    
    Parameters:
      appid                     uint32   required
        - The appid of the session to delete.
      sessionid                 uint64   required
        - The sessionid to delete.
      steamid                   uint64   required
        - (Optional) steamid to make the request on behalf of -- if specified, the user must be in the session.
  
IInventoryService
-----------------
  POST SplitItemStack (v0001)
  
    Split an item stack into two stacks
    
    Parameters:
      appid                     uint32   required
      itemid                    uint64   required
      key                       string   required
        - Access key
      quantity                  uint32   required
      steamid                   uint64   required
  
  POST CombineItemStacks (v0001)
  
    Combine two stacks of items
    
    Parameters:
      appid                     uint32   required
      destitemid                uint64   required
      fromitemid                uint64   required
      key                       string   required
        - Access key
      quantity                  uint32   required
      steamid                   uint64   required
  
  GET GetPriceSheet (v0001)
  
    Get the Inventory Service price sheet
    
    Parameters:
      ecurrency                 int32    required
      key                       string   required
        - Access key
  
IStoreService
-------------
  GET GetAppList (v0001)
  
    Gets a list of apps available on the Steam Store.
    
    Parameters:
      have_description_language string   optional
        - Return only items that have a description in this language.
      if_modified_since         uint32   optional
        - Return only items that have been modified since this date.
      include_dlc               bool     optional
        - Include DLC
      include_games             bool     optional
        - Include games (defaults to enabled)
      include_hardware          bool     optional
        - Include hardware
      include_software          bool     optional
        - Include software items
      include_videos            bool     optional
        - Include videos and series
      key                       string   required
        - Access key
      last_appid                uint32   optional
        - For continuations, this is the last appid returned from the previous call.
      max_results               uint32   optional
        - Number of results to return at a time.  Default 10k, max 50k.
  
ICheatReportingService
----------------------
  POST ReportCheatData (v0001)
  
    Reports cheat data. Only use on test account that is running the game but not in a multiplayer session.
    
    Parameters:
      appid                     uint32   required
        - The appid.
      cheat_data_dump           string   required
        - data collection in json format
      cheat_param_1             uint64   required
        - cheat param 1
      cheat_param_2             uint64   required
        - cheat param 2
      cheat_process_id          uint32   required
        - process ID of the cheat process that ran
      cheatname                 string   required
        - descriptive name for the cheat.
      game_process_id           uint32   required
        - process ID of the running game.
      key                       string   required
        - Access key
      pathandfilename           string   required
        - path and file name of the cheat executable.
      steamid                   uint64   required
        - steamid of the user running and reporting the cheat.
      time_now                  uint64   required
        - local system time now.
      time_started              uint64   required
        - local system time when cheat process started. ( 0 if not yet run )
      time_stopped              uint64   required
        - local system time when cheat process stopped. ( 0 if still running )
      webcheaturl               string   required
        - web url where the cheat was found and downloaded.
  


Process finished with exit code 0
